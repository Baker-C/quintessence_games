@import '../../Styles/variables.css';

.genesis-section {
  background-color: var(--secondary-bg);
  position: relative;
  overflow: hidden;
}

/* Painting background layer */
/* Cross-fade stack */
.genesis-section .painting-bg-stack {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 0;
}

.genesis-section .painting-bg-layer {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  opacity: 0;
  filter: saturate(0.65) brightness(0.65) contrast(1.05);
  mix-blend-mode: overlay;
  transition: opacity 2s ease-in-out; /* must match FADE_MS in component */
  will-change: opacity, transform;
}

/* Movement variants (direction alternates each swap) */
.genesis-section .painting-bg-layer.drift-a {
  animation: genesisDriftA 40s ease-in-out infinite;
}
.genesis-section .painting-bg-layer.drift-b {
  animation: genesisDriftB 40s ease-in-out infinite;
}

.genesis-section .painting-bg-layer.active { opacity: 0.2; }
.genesis-section .painting-bg-layer.inactive { opacity: 0; }

.genesis-section .painting-bg::after {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at 70% 30%, rgba(0,0,0,0) 0%, rgba(0,0,0,0.55) 85%);
  pointer-events: none;
}

/* Removed hard-coded background-image url() rules that caused build-time resolution errors.
  Background images now applied inline via React (see GenesisSection.js) with dual-layer cross-fade. */

@keyframes genesisDriftA {
  0% { transform: scale(1) translate3d(0,0,0); }
  25% { transform: scale(1.05) translate3d(1%, -1%, 0); }
  50% { transform: scale(1.08) translate3d(-1%, 1%, 0); }
  75% { transform: scale(1.04) translate3d(0.5%, -0.5%, 0); }
  100% { transform: scale(1) translate3d(0,0,0); }
}

@keyframes genesisDriftB {
  0% { transform: scale(1) translate3d(0,0,0); }
  25% { transform: scale(1.05) translate3d(-1%, 1%, 0); }
  50% { transform: scale(1.08) translate3d(1%, -1%, 0); }
  75% { transform: scale(1.04) translate3d(-0.5%, 0.5%, 0); }
  100% { transform: scale(1) translate3d(0,0,0); }
}

/* Opacity is now controlled solely by .active/.inactive classes + transition.
   Removed opacity from keyframes to ensure inactive layer reaches 0. */

/* Text Container */
.text-container {
  padding-left: var(--spacing-xl);
  text-align: left;
}

/* Match ValuesSection width constraints */
.genesis-container {
  max-width: 900px;
  margin: 0 auto;
  position: relative;
  z-index: 2;
}

.subtitle {
  font-family: var(--font-body);
  font-size: var(--font-size-base);
  color: var(--text-primary); /* white subtext */
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-bottom: var(--spacing-md);
  font-weight: 500;
  text-align: left;
}

.genesis-heading {
  font-family: var(--font-title);
  font-size: var(--font-size-xl);
  color: var(--accent-gold);
  margin-bottom: var(--spacing-lg);
  line-height: 1.1;
}


/* Removed right alignment; now inherits left alignment similar to values section. */

/* Text content */
.genesis-block {
  padding-left: var(--spacing-lg);
  position: relative;
}

.genesis-block::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 2px;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    var(--accent-gold) 20%,
    var(--accent-gold) 80%,
    transparent 100%
  );
}


/* VHS/Static Effects */
.static-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 2;
}

.static-line {
  position: absolute;
  left: 0;
  right: 0;
  height: 1px;
  background: rgba(255, 255, 255, 0.3);
  animation: staticFlicker 0.1s linear infinite;
}

.static-line:nth-child(1) {
  top: 20%;
  animation-delay: 0s;
}

.static-line:nth-child(2) {
  top: 55%;
  animation-delay: 0.05s;
}

.static-line:nth-child(3) {
  top: 80%;
  animation-delay: 0.1s;
}

@keyframes staticFlicker {
  0%, 100% { opacity: 0; }
  50% { opacity: 1; }
}

.vhs-border {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid rgba(194, 178, 128, 0.3);
  border-radius: var(--border-radius-md);
  pointer-events: none;
  z-index: 3;
}

.vhs-border::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: var(--border-radius-md);
}

/* Text Container */
.text-container {
  padding-left: var(--spacing-xl);
}

.genesis-text {
  font-family: var(--font-body);
  font-size: var(--font-size-md);
  color: var(--text-primary);
  line-height: 1.7;
  opacity: 0.9;
  margin: 0;
}

/* Background TV Static */
.tv-static-bg {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  pointer-events: none;
}

.static-noise {
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 20% 30%, rgba(255, 255, 255, 0.02) 1px, transparent 1px),
    radial-gradient(circle at 80% 70%, rgba(255, 255, 255, 0.01) 1px, transparent 1px),
    radial-gradient(circle at 40% 90%, rgba(255, 255, 255, 0.02) 1px, transparent 1px);
  background-size: 50px 50px, 30px 30px, 70px 70px;
}

/* Responsive design */
@media (max-width: 1024px) {
  .text-container {
    padding-left: 0;
    text-align: center;
  }
  
  .image-container {
    max-width: 500px;
    margin: 0 auto;
  }
}

@media (max-width: 768px) {
  .genesis-heading {
    font-size: var(--font-size-lg);
  }
  
  .genesis-text {
    font-size: var(--font-size-base);
  }
  
  .placeholder-text {
    font-size: var(--font-size-md);
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  .static-line {
    animation: none;
    opacity: 0.3;
  }
  
  .static-noise {
    animation: none;
  }
}
